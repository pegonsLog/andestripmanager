rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Função auxiliar para verificar se o usuário está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }

    // Função auxiliar para verificar se o usuário é o proprietário
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Verifica se a viagem pertence ao usuário autenticado
    function ownsViagemId(viagemId) {
      return viagemId != null &&
             isAuthenticated() &&
             get(/databases/$(database)/documents/viagens/$(viagemId)).data.usuarioId == request.auth.uid;
    }

    // Usuários - só podem acessar seus próprios dados
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow create: if isAuthenticated();
    }

    // Viagens - só o proprietário pode acessar
    match /viagens/{viagemId} {
      allow read, write: if isOwner(resource.data.usuarioId);
      allow create: if isOwner(request.resource.data.usuarioId);
    }

    // Dias de viagem - só o proprietário pode acessar
    match /dias-viagem/{diaId} {
      allow read, write: if isOwner(resource.data.usuarioId) || ownsViagemId(resource.data.viagemId);
      allow create: if isOwner(request.resource.data.usuarioId) || ownsViagemId(request.resource.data.viagemId);
    }

    // Paradas - só o proprietário pode acessar
    match /paradas/{paradaId} {
      allow read, write: if isOwner(resource.data.usuarioId) || ownsViagemId(resource.data.viagemId);
      allow create: if isOwner(request.resource.data.usuarioId) || ownsViagemId(request.resource.data.viagemId);
    }

    // Hospedagens - só o proprietário pode acessar
    match /hospedagens/{hospedagemId} {
      allow read, write: if isOwner(resource.data.usuarioId) || ownsViagemId(resource.data.viagemId);
      allow create: if isOwner(request.resource.data.usuarioId) || ownsViagemId(request.resource.data.viagemId);
    }

    // Custos - só o proprietário pode acessar
    match /custos/{custoId} {
      allow read, write: if isOwner(resource.data.usuarioId) || ownsViagemId(resource.data.viagemId);
      allow create: if isOwner(request.resource.data.usuarioId) || ownsViagemId(request.resource.data.viagemId);
    }

    // Clima - só o proprietário pode acessar
    match /clima/{climaId} {
      allow read, write: if isOwner(resource.data.usuarioId);
      allow create: if isOwner(request.resource.data.usuarioId);
    }

    // Manutenções - só o proprietário pode acessar
    match /manutencoes/{manutencaoId} {
      allow read, write: if isOwner(resource.data.usuarioId);
      allow create: if isOwner(request.resource.data.usuarioId);
    }

    // Diário de bordo - leitura pública se marcado como público
    match /diario-bordo/{diarioId} {
      allow read: if resource.data.publico == true || isOwner(resource.data.usuarioId);
      allow write: if isOwner(resource.data.usuarioId);
      allow create: if isOwner(request.resource.data.usuarioId);
    }
  }
}